/* 
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using DocuSign.eSign.Api;
using NUnit.Framework;

namespace DocuSign.eSign.Test.Api
{
    /// <summary>
    ///  Class for testing WorkspaceItemsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WorkspaceItemsApiTests
    {
        private WorkspaceItemsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WorkspaceItemsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WorkspaceItemsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WorkspaceItemsApi
            //Assert.IsInstanceOfType(typeof(WorkspaceItemsApi), instance, "instance is a WorkspaceItemsApi");
        }

        
        /// <summary>
        /// Test WorkspaceFileGetWorkspaceFile
        /// </summary>
        [Test]
        public void WorkspaceFileGetWorkspaceFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string fileId = null;
            //string folderId = null;
            //string workspaceId = null;
            //string isDownload = null;
            //string pdfVersion = null;
            //instance.WorkspaceFileGetWorkspaceFile(accountId, fileId, folderId, workspaceId, isDownload, pdfVersion);
            
        }
        
        /// <summary>
        /// Test WorkspaceFilePagesGetWorkspaceFilePages
        /// </summary>
        [Test]
        public void WorkspaceFilePagesGetWorkspaceFilePagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string fileId = null;
            //string folderId = null;
            //string workspaceId = null;
            //string count = null;
            //string dpi = null;
            //string maxHeight = null;
            //string maxWidth = null;
            //string startPosition = null;
            //var response = instance.WorkspaceFilePagesGetWorkspaceFilePages(accountId, fileId, folderId, workspaceId, count, dpi, maxHeight, maxWidth, startPosition);
            //Assert.IsInstanceOf<PageImages> (response, "response is PageImages");
        }
        
        /// <summary>
        /// Test WorkspaceFilePostWorkspaceFiles
        /// </summary>
        [Test]
        public void WorkspaceFilePostWorkspaceFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string folderId = null;
            //string workspaceId = null;
            //var response = instance.WorkspaceFilePostWorkspaceFiles(accountId, folderId, workspaceId);
            //Assert.IsInstanceOf<WorkspaceItems> (response, "response is WorkspaceItems");
        }
        
        /// <summary>
        /// Test WorkspaceFilePutWorkspaceFile
        /// </summary>
        [Test]
        public void WorkspaceFilePutWorkspaceFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string fileId = null;
            //string folderId = null;
            //string workspaceId = null;
            //var response = instance.WorkspaceFilePutWorkspaceFile(accountId, fileId, folderId, workspaceId);
            //Assert.IsInstanceOf<WorkspaceItems> (response, "response is WorkspaceItems");
        }
        
        /// <summary>
        /// Test WorkspaceFolderDeleteWorkspaceItems
        /// </summary>
        [Test]
        public void WorkspaceFolderDeleteWorkspaceItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string folderId = null;
            //string workspaceId = null;
            //WorkspaceItemList workspaceItemList = null;
            //instance.WorkspaceFolderDeleteWorkspaceItems(accountId, folderId, workspaceId, workspaceItemList);
            
        }
        
        /// <summary>
        /// Test WorkspaceFolderGetWorkspaceFolder
        /// </summary>
        [Test]
        public void WorkspaceFolderGetWorkspaceFolderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string folderId = null;
            //string workspaceId = null;
            //string count = null;
            //string includeFiles = null;
            //string includeSubFolders = null;
            //string includeThumbnails = null;
            //string includeUserDetail = null;
            //string startPosition = null;
            //string workspaceUserId = null;
            //var response = instance.WorkspaceFolderGetWorkspaceFolder(accountId, folderId, workspaceId, count, includeFiles, includeSubFolders, includeThumbnails, includeUserDetail, startPosition, workspaceUserId);
            //Assert.IsInstanceOf<WorkspaceFolderContents> (response, "response is WorkspaceFolderContents");
        }
        
    }

}
