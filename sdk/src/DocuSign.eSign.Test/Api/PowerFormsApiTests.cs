/* 
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using DocuSign.eSign.Api;
using NUnit.Framework;

namespace DocuSign.eSign.Test.Api
{
    /// <summary>
    ///  Class for testing PowerFormsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PowerFormsApiTests
    {
        private PowerFormsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PowerFormsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PowerFormsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PowerFormsApi
            //Assert.IsInstanceOfType(typeof(PowerFormsApi), instance, "instance is a PowerFormsApi");
        }

        
        /// <summary>
        /// Test PowerFormsDeletePowerForm
        /// </summary>
        [Test]
        public void PowerFormsDeletePowerFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string powerFormId = null;
            //instance.PowerFormsDeletePowerForm(accountId, powerFormId);
            
        }
        
        /// <summary>
        /// Test PowerFormsDeletePowerFormsList
        /// </summary>
        [Test]
        public void PowerFormsDeletePowerFormsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //PowerFormsRequest powerFormsRequest = null;
            //var response = instance.PowerFormsDeletePowerFormsList(accountId, powerFormsRequest);
            //Assert.IsInstanceOf<PowerFormsResponse> (response, "response is PowerFormsResponse");
        }
        
        /// <summary>
        /// Test PowerFormsGetPowerForm
        /// </summary>
        [Test]
        public void PowerFormsGetPowerFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string powerFormId = null;
            //var response = instance.PowerFormsGetPowerForm(accountId, powerFormId);
            //Assert.IsInstanceOf<PowerForms> (response, "response is PowerForms");
        }
        
        /// <summary>
        /// Test PowerFormsGetPowerFormsList
        /// </summary>
        [Test]
        public void PowerFormsGetPowerFormsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string fromDate = null;
            //string order = null;
            //string orderBy = null;
            //string toDate = null;
            //var response = instance.PowerFormsGetPowerFormsList(accountId, fromDate, order, orderBy, toDate);
            //Assert.IsInstanceOf<PowerFormsResponse> (response, "response is PowerFormsResponse");
        }
        
        /// <summary>
        /// Test PowerFormsGetPowerFormsSenders
        /// </summary>
        [Test]
        public void PowerFormsGetPowerFormsSendersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string startPosition = null;
            //var response = instance.PowerFormsGetPowerFormsSenders(accountId, startPosition);
            //Assert.IsInstanceOf<PowerFormSendersResponse> (response, "response is PowerFormSendersResponse");
        }
        
        /// <summary>
        /// Test PowerFormsPostPowerForm
        /// </summary>
        [Test]
        public void PowerFormsPostPowerFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //PowerForms powerForms = null;
            //var response = instance.PowerFormsPostPowerForm(accountId, powerForms);
            //Assert.IsInstanceOf<PowerForms> (response, "response is PowerForms");
        }
        
        /// <summary>
        /// Test PowerFormsPutPowerForm
        /// </summary>
        [Test]
        public void PowerFormsPutPowerFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string powerFormId = null;
            //PowerForms powerForms = null;
            //var response = instance.PowerFormsPutPowerForm(accountId, powerFormId, powerForms);
            //Assert.IsInstanceOf<PowerForms> (response, "response is PowerForms");
        }
        
    }

}
